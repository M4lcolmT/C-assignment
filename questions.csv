1|C2|What is the time complexity of linear search?|a. O(1)|b. O(log n)|c. O(n)|d. O(n log n)|c
2|C3|The main difference between an array and a linked list is that arrays have ___ access to any element, while linked lists have ___ access.|a. constant-time, constant-time|b. constant-time, linear-time|c. linear-time, constant-time|d. linear-time, linear-time|b
3|C1|The purpose of a stack data structure is to provide a ___ storage and retrieval mechanism.|a. First-In-First-Out (FIFO)|b. Last-In-First-Out (LIFO)|c. Random access|d. Constant-time|b
4|C1|A binary search tree maintains its search property by ensuring that for every node, all the elements in its ___ subtree are less than the node's value, and all the elements in its ___ subtree are greater than the node's value.|a. left, right|b. right, left|c. parent, child|d. root, leaf|a
5|C2|Recursion is a problem-solving technique where a function ___ itself to solve a smaller instance of the same problem.|a. loops|b. iterates|c. compares|d. calls|d
6|C1|The main difference between a min-heap and a max-heap is the ___ of the elements.|a. size|b. ordering|c. height|d. depth|b
7|C2|The time complexity of the merge sort algorithm is ___ .|a. O(1)|b. O(log n)|c. O(n)|d. O(n log n)|d
8|C1|To implement a queue using two stacks, you can use one stack for ___ operations and the other stack for ___ operations.|a. enqueue, dequeue|b. push, pop|c. front, rear|d. insert, delete|a
9|C2|Breadth-First Search (BFS) explores all the neighbors at the ___ depth level before moving on to the neighbors at the ___ depth level.|a. current, next|b. next, current|c. minimum, maximum|d. first, last|a
10|C2|The time complexity of inserting a new node into a binary search tree is ___ .|a. O(1)|b. O(log n)|c. O(n)|d. O(n log n)|b
11|C1|Hash tables provide ___ average-case performance for basic operations like insertion, deletion, and lookup.|a. logarithmic|b. linear|c. quadratic|d. constant|d
12|C2|In dynamic programming, complex problems are solved by breaking them down into ___ subproblems and ___ the solutions to those subproblems.|a. smaller, reusing|b. larger, discarding|c. constant, combining|d. linear, optimizing|a
13|C1|A doubly linked list node has ___ pointers: one pointing to the next node and one pointing to the previous node.|a. one|b. two|c. three|d. four|b
14|C2|The average-case time complexity of the quicksort algorithm is ___ .|a. O(1)|b. O(log n)|c. O(n)|d. O(n log n)|d
15|C1|A priority queue stores elements with associated ___ and allows for efficient retrieval of the element with the ___ priority.|a. indices, highest|b. keys, highest|c. priorities, highest|d. values, lowest|c
16|C3|Time complexity measures the ___ an algorithm takes to run, while space complexity measures the ___ an algorithm uses.|a. time, memory|b. space, time|c. operations, memory|d. memory, operations|a
17|C1|The purpose of a trie data structure is to efficiently store and retrieve ___ .|a. integers|b. floating-point numbers|c. strings|d. arrays|c
18|C1|An ___ matrix represents a graph by indicating whether there is an edge between each pair of vertices.|a. adjacency|b. incidence|c. distance|d. weight|a
19|C2|Dijkstra's algorithm is used to find the ___ path between a starting vertex and all other vertices in a weighted graph.|a. longest|b. shortest|c. most efficient|d. fastest|b
20|C3|The main differences between a min-heap and a binary search tree are the ___ they maintain and the ___ they use.|a. search property, data structure|b. minimum value, maximum value|c. insertion order, deletion order|d. height, depth|a
21|C3|Amortized analysis is a technique used to analyze the ___ time complexity of a sequence of operations, rather than the ___ time complexity of individual operations.|a. average-case, worst-case|b. worst-case, average-case|c. best-case, average-case|d. constant, logarithmic|a
22|C1|A ___ set, also known as a union-find data structure, is used to keep track of a collection of disjoint (non-overlapping) sets.|a. disjoint|b. connected|c. ordered|d. unordered|a
23|C1|A ___ list is a probabilistic data structure that provides efficient search, insertion, and deletion operations, with an average-case time complexity of O(log n).|a. linked|b. binary search|c. skip|d. doubly linked|c
24|C1|In a singly linked list, the time complexity of accessing the nth element is ___, inserting at the beginning is ___, and deleting the nth element is ___ .|a. O(1), O(n), O(1)|b. O(n), O(1), O(n)|c. O(n), O(1), O(1)|d. O(1), O(1), O(n)|b
25|C1|In a max-heap, the root node contains the ___ value, and the child nodes are ___ than their parent.|a. smallest, smaller|b. smallest, larger|c. largest, smaller|d. largest, larger|d
26|C2|Topological sorting is a linear ordering of the vertices in a ___ graph.|a. directed acyclic|b. undirected|c. weighted|d. bipartite|a
27|C1|A ___ buffer, also known as a ring buffer, is a data structure that uses a fixed-size array to store elements and maintains two pointers, one for the head and one for the tail.|a. circular|b. dynamic|c. fixed-size|d. sliding|a
28|C1|The purpose of a ___ tree is to enable efficient range queries on arrays, allowing for quick lookups of the minimum, maximum, or sum of all the elements in a given range.|a. binary search|b. segment|c. quadtree|d. suffix|b
29|C1|In a doubly linked list, the time complexity of accessing the nth element is ___, inserting at the beginning is ___, and deleting the first element is ___ .|a. O(1), O(n), O(1)|b. O(n), O(1), O(n)|c. O(n), O(1), O(1)|d. O(1), O(1), O(1)|c
30|C1|To implement an LRU (Least Recently Used) cache, you can use a combination of a ___ and a ___ .|a. hash table, array|b. binary search tree, linked list|c. hash table, doubly linked list|d. stack, queue|c
31|C3|A trie data structure is used to efficiently store and retrieve ___, while a binary search tree is used to efficiently store and retrieve ___ .|a. strings, integers|b. integers, strings|c. arrays, linked lists|d. linked lists, arrays|a
32|C3|Amortized time complexity is a way to analyze the ___ performance of a sequence of operations, rather than the ___ performance of individual operations.|a. worst-case, average-case|b. average-case, worst-case|c. best-case, average-case|d. constant, logarithmic|b
33|C1|A ___ data structure, also known as a disjoint-set, is used to keep track of a collection of disjoint (non-overlapping) sets.|a. union-find|b. binary search tree|c. hash table|d. trie|a
34|C1|A ___ tree is a self-balancing binary search tree that ensures the length of the longest path from the root to a leaf is no more than twice the length of the shortest path.|a. red-black|b. AVL|c. splay|d. treap|a
35|C1|The time complexities of common operations in a binary search tree are: accessing the nth element (O(log n)), inserting a new element (O(log n)), and finding the minimum/maximum element (O(log n)). Please choose a. True b. False|a. True|b. False|a
36|C1|A ___ tree is a tree-based data structure used for efficient range queries on arrays, constructed by recursively dividing the input array into smaller segments and storing the relevant information at each node.|a. segment|b. quad|c. suffix|d. kd|a
37|C1|A ___ array is a data structure that stores all the suffixes of a string in sorted order, useful for tasks like pattern matching and text compression.|a. prefix|b. suffix|c. substring|d. subarray|b
38|C2|Dynamic programming solves complex problems by breaking them down into smaller ___ and reusing the solutions to those subproblems.|a. subroutines|b. subtasks|c. subsets|d. subproblems|d
39|C1|A ___ heap is a priority queue data structure that provides efficient implementations of the insert and decrease-key operations, with amortized time complexities of O(1) and O(log n), respectively.|a. Fibonacci|b. Binomial|c. Leftist|d. Pairing|a
40|C1|A ___ filter is a probabilistic data structure used to test whether an element is a member of a set, by using multiple hash functions to map an element to positions in a bit array.|a. bloom|b. cuckoo|c. hash|d. trie|a
41|C1|The time complexities of common operations in a hash table are: accessing an element (O(1) on average), inserting an element (O(1) on average), and deleting an element (O(1) on average). Please choose a. True b. False|a. True|b. False|a
42|C1|A ___ window data structure maintains a fixed-size window over a larger data structure, such as an array or a queue, and supports efficient updates and queries within the window.|a. sliding|b. circular|c. fixed-size|d. dynamic|a
43|C1|A ___ tree is a space-partitioning data structure used for organizing points in a k-dimensional space, useful for efficient nearest neighbor search and range search.|a. kd|b. quadtree|c. octree|d. bintree|a
44|C2|Memoization is an optimization technique used in dynamic programming to store the results of expensive function calls and return the cached result when the same inputs occur again, improving the efficiency of the algorithm. Please choose a. True b. False|a. True|b. False|a
45|C1|A ___ List is a probabilistic data structure that provides efficient search, insertion, and deletion operations, with an average-case time complexity of O(log n), by creating multiple layers of linked lists.|a. Linked|b. Binary Search|c. Skip|d. Doubly Linked|c
46|C1|A ___ tree is a tree-based data structure used for partitioning two-dimensional space by recursively subdividing it into four quadrants or regions, useful for spatial queries and operations.|a. kd|b. quadtree|c. octree|d. bintree|b
47|C1|The time complexities of common operations in a Trie data structure are: inserting a word (O(k)), searching for a word (O(k)), and finding all words with a given prefix (O(k + output size)), where k is the length of the word or prefix. Please choose a. True b. False|a. True|b. False|a
48|C1|A ___ Tree, also known as a Binary Indexed Tree (BIT), is a data structure that efficiently computes prefix sums in an array, allowing for fast range queries and updates.|a. Fenwick|b. Segment|c. Interval|d. Suffix|a
49|C1|The main advantage of a ___ List over a standard linked list is its ability to provide logarithmic-time access to elements, without the need for a balanced tree structure.|a. Linked|b. Binary Search|c. Skip|d. Doubly Linked|c
50|C1|The purpose of a ___ is to partition two-dimensional space by recursively subdividing it into four quadrants or regions, useful for applications that involve spatial data.|a. kd-tree|b. quadtree|c. octree|d. bintree|b
51|C2|The time complexity of the binary search algorithm is?|a. O(1)|b. O(log n)|c. O(n)|d. O(n log n)|b
52|C1|The main difference between a singly linked list and a doubly linked list is that a doubly linked list uses ___ pointers per node.|a. one|b. two|c. three|d. four|b
53|C1|The purpose of a queue data structure is to provide a ___ storage and retrieval mechanism.|a. Last-In-First-Out (LIFO)|b. First-In-First-Out (FIFO)|c. Random access|d. Constant-time|b
54|C1|In a min-heap, the root node contains the ___ value, and the child nodes are ___ than their parent.|a. smallest, smaller|b. smallest, larger|c. largest, smaller|d. largest, larger|b
55|C2|The merge sort algorithm works by recursively dividing the input array into ___ subarrays, sorting them, and then ___ them back together.|a. larger, merging|b. smaller, merging|c. larger, splitting|d. smaller, splitting|b
56|C1|To implement a queue using two stacks, you can use one stack for ___ operations and transfer elements to the other stack when ___ .|a. enqueue, dequeue|b. push, pop|c. front, rear|d. insert, delete|a
57|C2|Breadth-First Search (BFS) explores all the neighbors at the ___ depth level before moving on to the neighbors at the ___ depth level.|a. current, next|b. next, current|c. minimum, maximum|d. first, last|a
58|C2|The time complexity of inserting a new node into a binary search tree is ___ .|a. O(1)|b. O(log n)|c. O(n)|d. O(n log n)|b
59|C1|Hash tables provide ___ average-case performance for basic operations like insertion, deletion, and lookup.|a. logarithmic|b. linear|c. quadratic|d. constant|d
60|C2|In dynamic programming, complex problems are solved by breaking them down into ___ subproblems and ___ the solutions to those subproblems.|a. smaller, reusing|b. larger, discarding|c. constant, combining|d. linear, optimizing|a
61|C1|A doubly linked list node has ___ pointers: one pointing to the next node and one pointing to the previous node.|a. one|b. two|c. three|d. four|b
62|C2|The average-case time complexity of the quicksort algorithm is ___ .|a. O(1)|b. O(log n)|c. O(n)|d. O(n log n)|d
63|C1|A priority queue stores elements with associated ___ and allows for efficient retrieval of the element with the ___ priority.|a. indices, highest|b. keys, highest|c. priorities, highest|d. values, lowest|c
64|C3|Time complexity measures the ___ an algorithm takes to run, while space complexity measures the ___ an algorithm uses.|a. time, memory|b. space, time|c. operations, memory|d. memory, operations|a
65|C1|The purpose of a trie data structure is to efficiently store and retrieve ___ .|a. integers|b. floating-point numbers|c. strings|d. arrays|c
66|C1|An ___ matrix represents a graph by indicating whether there is an edge between each pair of vertices.|a. adjacency|b. incidence|c. distance|d. weight|a
67|C2|Dijkstra's algorithm is used to find the ___ path between a starting vertex and all other vertices in a weighted graph.|a. longest|b. shortest|c. most efficient|d. fastest|b
68|C3|The main differences between a min-heap and a binary search tree are the ___ they maintain and the ___ they use.|a. search property, data structure|b. minimum value, maximum value|c. insertion order, deletion order|d. height, depth|a
69|C3|Amortized analysis is a technique used to analyze the ___ time complexity of a sequence of operations, rather than the ___ time complexity of individual operations.|a. average-case, worst-case|b. worst-case, average-case|c. best-case, average-case|d. constant, logarithmic|a
70|C1|A ___ set, also known as a union-find data structure, is used to keep track of a collection of disjoint (non-overlapping) sets.|a. disjoint|b. connected|c. ordered|d. unordered|a
71|C1|A ___ list is a probabilistic data structure that provides efficient search, insertion, and deletion operations, with an average-case time complexity of O(log n).|a. linked|b. binary search|c. skip|d. doubly linked|c
72|C1|In a singly linked list, the time complexity of accessing the nth element is ___, inserting at the beginning is ___, and deleting the nth element is ___ .|a. O(1), O(n), O(1)|b. O(n), O(1), O(n)|c. O(n), O(1), O(1)|d. O(1), O(1), O(n)|b
73|C1|In a max-heap, the root node contains the ___ value, and the child nodes are ___ than their parent.|a. smallest, smaller|b. smallest, larger|c. largest, smaller|d. largest, larger|d
74|C2|Topological sorting is a linear ordering of the vertices in a ___ graph.|a. directed acyclic|b. undirected|c. weighted|d. bipartite|a
75|C1|A ___ buffer, also known as a ring buffer, is a data structure that uses a fixed-size array to store elements and maintains two pointers, one for the head and one for the tail.|a. circular|b. dynamic|c. fixed-size|d. sliding|a
76|C1|The purpose of a ___ tree is to enable efficient range queries on arrays, allowing for quick lookups of the minimum, maximum, or sum of all the elements in a given range.|a. binary search|b. segment|c. quadtree|d. suffix|b
77|C1|In a doubly linked list, the time complexity of accessing the nth element is ___, inserting at the beginning is ___, and deleting the first element is ___ .|a. O(1), O(n), O(1)|b. O(n), O(1), O(n)|c. O(n), O(1), O(1)|d. O(1), O(1), O(1)|c
78|C1|To implement an LRU (Least Recently Used) cache, you can use a combination of a ___ and a ___ .|a. hash table, array|b. binary search tree, linked list|c. hash table, doubly linked list|d. stack, queue|c
79|C3|A trie data structure is used to efficiently store and retrieve ___, while a binary search tree is used to efficiently store and retrieve ___ .|a. strings, integers|b. integers, strings|c. arrays, linked lists|d. linked lists, arrays|a
80|C3|Amortized time complexity is a way to analyze the ___ performance of a sequence of operations, rather than the ___ performance of individual operations.|a. worst-case, average-case|b. average-case, worst-case|c. best-case, average-case|d. constant, logarithmic|b
81|C1|A ___ data structure, also known as a disjoint-set, is used to keep track of a collection of disjoint (non-overlapping) sets.|a. union-find|b. binary search tree|c. hash table|d. trie|a
82|C1|A ___ tree is a self-balancing binary search tree that ensures the length of the longest path from the root to a leaf is no more than twice the length of the shortest path.|a. red-black|b. AVL|c. splay|d. treap|a
83|C1|The time complexities of common operations in a binary search tree are: accessing the nth element (O(log n)), inserting a new element (O(log n)), and finding the minimum/maximum element (O(log n)). Please choose a. True b. False|a. True|b. False|a
84|C1|A ___ tree is a tree-based data structure used for efficient range queries on arrays, constructed by recursively dividing the input array into smaller segments and storing the relevant information at each node.|a. segment|b. quad|c. suffix|d. kd|a
85|C1|A ___ array is a data structure that stores all the suffixes of a string in sorted order, useful for tasks like pattern matching and text compression.|a. prefix|b. suffix|c. substring|d. subarray|b
86|C2|Dynamic programming solves complex problems by breaking them down into smaller ___ and reusing the solutions to those subproblems.|a. subroutines|b. subtasks|c. subsets|d. subproblems|d
87|C1|A ___ heap is a priority queue data structure that provides efficient implementations of the insert and decrease-key operations, with amortized time complexities of O(1) and O(log n), respectively.|a. Fibonacci|b. Binomial|c. Leftist|d. Pairing|a
88|C1|A ___ filter is a probabilistic data structure used to test whether an element is a member of a set, by using multiple hash functions to map an element to positions in a bit array.|a. bloom|b. cuckoo|c. hash|d. trie|a
89|C1|The time complexities of common operations in a hash table are: accessing an element (O(1) on average), inserting an element (O(1) on average), and deleting an element (O(1) on average). Please choose a. True b. False|a. True|b. False|a
90|C1|A ___ window data structure maintains a fixed-size window over a larger data structure, such as an array or a queue, and supports efficient updates and queries within the window.|a. sliding|b. circular|c. fixed-size|d. dynamic|a
91|C1|A ___ tree is a space-partitioning data structure used for organizing points in a k-dimensional space, useful for efficient nearest neighbor search and range search.|a. kd|b. quadtree|c. octree|d. bintree|a
92|C2|Memoization is an optimization technique used in dynamic programming to store the results of expensive function calls and return the cached result when the same inputs occur again, improving the efficiency of the algorithm. Please choose a. True b. False|a. True|b. False|a
93|C1|A ___ List is a probabilistic data structure that provides efficient search, insertion, and deletion operations, with an average-case time complexity of O(log n), by creating multiple layers of linked lists.|a. Linked|b. Binary Search|c. Skip|d. Doubly Linked|c
94|C1|A ___ tree is a tree-based data structure used for partitioning two-dimensional space by recursively subdividing it into four quadrants or regions, useful for spatial queries and operations.|a. kd|b. quadtree|c. octree|d. bintree|b
95|C1|The time complexities of common operations in a Trie data structure are: inserting a word (O(k)), searching for a word (O(k)), and finding all words with a given prefix (O(k + output size)), where k is the length of the word or prefix. Please choose a. True b. False|a. True|b. False|a
96|C1|A ___ Tree, also known as a Binary Indexed Tree (BIT), is a data structure that efficiently computes prefix sums in an array, allowing for fast range queries and updates.|a. Fenwick|b. Segment|c. Interval|d. Suffix|a
97|C1|The main advantage of a ___ List over a standard linked list is its ability to provide logarithmic-time access to elements, without the need for a balanced tree structure.|a. Linked|b. Binary Search|c. Skip|d. Doubly Linked|c
98|C1|The purpose of a ___ is to partition two-dimensional space by recursively subdividing it into four quadrants or regions, useful for applications that involve spatial data.|a. kd-tree|b. quadtree|c. octree|d. bintree|b
99|C2|The time complexity of the depth-first search (DFS) algorithm on a graph is ___ .|a. O(1)|b. O(log n)|c. O(n)|d. O(n + m)|d
100|C1|The main difference between an array and a linked list is that arrays have ___ access to any element, while linked lists have ___ access.|a. constant-time, constant-time|b. constant-time, linear-time|c. linear-time, constant-time|d. linear-time, linear-time|b
101|C1|The purpose of a stack data structure is to provide a ___ storage and retrieval mechanism.|a. First-In-First-Out (FIFO)|b. Last-In-First-Out (LIFO)|c. Random access|d. Constant-time|b
102|C1|In a binary search tree, the left subtree of a node contains values that are ___ than the node's value, and the right subtree contains values that are ___ than the node's value.|a. smaller, larger|b. larger, smaller|c. equal, different|d. odd, even|a
103|C2|Recursion is a problem-solving technique where a function ___ itself to solve a smaller instance of the same problem.|a. loops|b. iterates|c. compares|d. calls|d
104|C1|The main difference between a min-heap and a max-heap is the ___ of the elements.|a. size|b. ordering|c. height|d. depth|b
105|C2|The time complexity of the merge sort algorithm is ___ .|a. O(1)|b. O(log n)|c. O(n)|d. O(n log n)|d
106|C1|To implement a queue using two stacks, you can use one stack for ___ operations and the other stack for ___ operations.|a. enqueue, dequeue|b. push, pop|c. front, rear|d. insert, delete|a
107|C2|Breadth-First Search (BFS) explores all the neighbors at the ___ depth level before moving on to the neighbors at the ___ depth level.|a. current, next|b. next, current|c. minimum, maximum|d. first, last|a
108|C2|The time complexity of inserting a new node into a binary search tree is ___ .|a. O(1)|b. O(log n)|c. O(n)|d. O(n log n)|b
109|C1|Hash tables provide ___ average-case performance for basic operations like insertion, deletion, and lookup.|a. logarithmic|b. linear|c. quadratic|d. constant|d
110|C2|In dynamic programming, complex problems are solved by breaking them down into ___ subproblems and ___ the solutions to those subproblems.|a. smaller, reusing|b. larger, discarding|c. constant, combining|d. linear, optimizing|a
111|C1|A doubly linked list node has ___ pointers: one pointing to the next node and one pointing to the previous node.|a. one|b. two|c. three|d. four|b
112|C2|The average-case time complexity of the quicksort algorithm is ___ .|a. O(1)|b. O(log n)|c. O(n)|d. O(n log n)|d
113|C1|A priority queue stores elements with associated ___ and allows for efficient retrieval of the element with the ___ priority.|a. indices, highest|b. keys, highest|c. priorities, highest|d. values, lowest|c
114|C3|Time complexity measures the ___ an algorithm takes to run, while space complexity measures the ___ an algorithm uses.|a. time, memory|b. space, time|c. operations, memory|d. memory, operations|a
115|C1|The purpose of a trie data structure is to efficiently store and retrieve ___ .|a. integers|b. floating-point numbers|c. strings|d. arrays|c
116|C1|An ___ matrix represents a graph by indicating whether there is an edge between each pair of vertices.|a. adjacency|b. incidence|c. distance|d. weight|a
117|C2|Dijkstra's algorithm is used to find the ___ path between a starting vertex and all other vertices in a weighted graph.|a. longest|b. shortest|c. most efficient|d. fastest|b
118|C3|The main differences between a min-heap and a binary search tree are the ___ they maintain and the ___ they use.|a. search property, data structure|b. minimum value, maximum value|c. insertion order, deletion order|d. height, depth|a
119|C3|Amortized analysis is a technique used to analyze the ___ time complexity of a sequence of operations, rather than the ___ time complexity of individual operations.|a. average-case, worst-case|b. worst-case, average-case|c. best-case, average-case|d. constant, logarithmic|a
120|C1|A ___ set, also known as a union-find data structure, is used to keep track of a collection of disjoint (non-overlapping) sets.|a. disjoint|b. connected|c. ordered|d. unordered|a
121|C1|A ___ list is a probabilistic data structure that provides efficient search, insertion, and deletion operations, with an average-case time complexity of O(log n).|a. linked|b. binary search|c. skip|d. doubly linked|c
122|C1|In a singly linked list, the time complexity of accessing the nth element is ___, inserting at the beginning is ___, and deleting the nth element is ___ .|a. O(1), O(n), O(1)|b. O(n), O(1), O(n)|c. O(n), O(1), O(1)|d. O(1), O(1), O(n)|b
123|C1|In a max-heap, the root node contains the ___ value, and the child nodes are ___ than their parent.|a. smallest, smaller|b. smallest, larger|c. largest, smaller|d. largest, larger|d
124|C2|Topological sorting is a linear ordering of the vertices in a ___ graph.|a. directed acyclic|b. undirected|c. weighted|d. bipartite|a
125|C1|A ___ buffer, also known as a ring buffer, is a data structure that uses a fixed-size array to store elements and maintains two pointers, one for the head and one for the tail.|a. circular|b. dynamic|c. fixed-size|d. sliding|a
126|C1|The purpose of a ___ tree is to enable efficient range queries on arrays, allowing for quick lookups of the minimum, maximum, or sum of all the elements in a given range.|a. binary search|b. segment|c. quadtree|d. suffix|b
127|C1|In a doubly linked list, the time complexity of accessing the nth element is ___, inserting at the beginning is ___, and deleting the first element is ___ .|a. O(1), O(n), O(1)|b. O(n), O(1), O(n)|c. O(n), O(1), O(1)|d. O(1), O(1), O(1)|c
128|C1|To implement an LRU (Least Recently Used) cache, you can use a combination of a ___ and a ___ .|a. hash table, array|b. binary search tree, linked list|c. hash table, doubly linked list|d. stack, queue|c
129|C3|A trie data structure is used to efficiently store and retrieve ___, while a binary search tree is used to efficiently store and retrieve ___ .|a. strings, integers|b. integers, strings|c. arrays, linked lists|d. linked lists, arrays|a
130|C3|Amortized time complexity is a way to analyze the ___ performance of a sequence of operations, rather than the ___ performance of individual operations.|a. worst-case, average-case|b. average-case, worst-case|c. best-case, average-case|d. constant, logarithmic|b
131|C1|A ___ data structure, also known as a disjoint-set, is used to keep track of a collection of disjoint (non-overlapping) sets.|a. union-find|b. binary search tree|c. hash table|d. trie|a
132|C1|A ___ tree is a self-balancing binary search tree that ensures the length of the longest path from the root to a leaf is no more than twice the length of the shortest path.|a. red-black|b. AVL|c. splay|d. treap|a
133|C1|The time complexities of common operations in a binary search tree are: accessing the nth element (O(log n)), inserting a new element (O(log n)), and finding the minimum/maximum element (O(log n)). Please choose a. True b. False|a. True|b. False|a
134|C1|A ___ tree is a tree-based data structure used for efficient range queries on arrays, constructed by recursively dividing the input array into smaller segments and storing the relevant information at each node.|a. segment|b. quad|c. suffix|d. kd|a
135|C1|A ___ array is a data structure that stores all the suffixes of a string in sorted order, useful for tasks like pattern matching and text compression.|a. prefix|b. suffix|c. substring|d. subarray|b
136|C2|Dynamic programming solves complex problems by breaking them down into smaller ___ and reusing the solutions to those subproblems.|a. subroutines|b. subtasks|c. subsets|d. subproblems|d
137|C1|A ___ heap is a priority queue data structure that provides efficient implementations of the insert and decrease-key operations, with amortized time complexities of O(1) and O(log n), respectively.|a. Fibonacci|b. Binomial|c. Leftist|d. Pairing|a
138|C1|A ___ filter is a probabilistic data structure used to test whether an element is a member of a set, by using multiple hash functions to map an element to positions in a bit array.|a. bloom|b. cuckoo|c. hash|d. trie|a
139|C1|The time complexities of common operations in a hash table are: accessing an element (O(1) on average), inserting an element (O(1) on average), and deleting an element (O(1) on average). Please choose a. True b. False|a. True|b. False|a
140|C1|A ___ window data structure maintains a fixed-size window over a larger data structure, such as an array or a queue, and supports efficient updates and queries within the window.|a. sliding|b. circular|c. fixed-size|d. dynamic|a
141|C1|A ___ tree is a space-partitioning data structure used for organizing points in a k-dimensional space, useful for efficient nearest neighbor search and range search.|a. kd|b. quadtree|c. octree|d. bintree|a
142|C2|Memoization is an optimization technique used in dynamic programming to store the results of expensive function calls and return the cached result when the same inputs occur again, improving the efficiency of the algorithm. Please choose a. True b. False|a. True|b. False|a
143|C1|A ___ List is a probabilistic data structure that provides efficient search, insertion, and deletion operations, with an average-case time complexity of O(log n), by creating multiple layers of linked lists.|a. Linked|b. Binary Search|c. Skip|d. Doubly Linked|c
144|C1|A ___ tree is a tree-based data structure used for partitioning two-dimensional space by recursively subdividing it into four quadrants or regions, useful for spatial queries and operations.|a. kd|b. quadtree|c. octree|d. bintree|b
145|C1|The time complexities of common operations in a Trie data structure are: inserting a word (O(k)), searching for a word (O(k)), and finding all words with a given prefix (O(k + output size)), where k is the length of the word or prefix. Please choose a. True b. False|a. True|b. False|a
146|C1|A ___ Tree, also known as a Binary Indexed Tree (BIT), is a data structure that efficiently computes prefix sums in an array, allowing for fast range queries and updates.|a. Fenwick|b. Segment|c. Interval|d. Suffix|a
147|C1|The main advantage of a ___ List over a standard linked list is its ability to provide logarithmic-time access to elements, without the need for a balanced tree structure.|a. Linked|b. Binary Search|c. Skip|d. Doubly Linked|c
148|C1|The purpose of a ___ is to partition two-dimensional space by recursively subdividing it into four quadrants or regions, useful for applications that involve spatial data.|a. kd-tree|b. quadtree|c. octree|d. bintree|b
149|C2|The time complexity of the breadth-first search (BFS) algorithm on a graph is ___ .|a. O(1)|b. O(log n)|c. O(n)|d. O(n + m)|d
150|C3|The main difference between an array and a linked list is that arrays have ___ access to any element, while linked lists have ___ access.|a. constant-time, constant-time|b. constant-time, linear-time|c. linear-time, constant-time|d. linear-time, linear-time|b
151|C1|Which of the following are basic operations supported by a stack?|a. Push|b. Pop|c. Enqueue|d. Dequeue|a,b
152|C1|Which data structures follow the FIFO (First-In-First-Out) principle?|a. Stack|b. Queue|c. Priority Queue|d. Circular Queue|b,d
153|C1|What are the advantages of using a linked list over an array?|a. Dynamic size|b. Efficient insertion and deletion|c. Random access|d. Cache-friendly|a,b
154|C2|Which of the following sorting algorithms have an average-case time complexity of O(n log n)?|a. Bubble Sort|b. Selection Sort|c. Merge Sort|d. Quick Sort|c,d
155|C1|In a binary search tree, which of the following statements are true?|a. The left subtree of a node contains values less than the node's value|b. The right subtree of a node contains values greater than the node's value|c. Duplicate values are not allowed|d. The tree is always balanced|a,b,c
156|C2|Which of the following are not stable sorting algorithms?|a. Bubble Sort|b. Selection Sort|c. Quick Sort|d. Heap Sort|c,d
157|C2|Which traversal methods can be used to visit all nodes in a binary tree?|a. Preorder|b. Inorder|c. Postorder|d. Level-order|a,b,c
158|C2|Which of the following are examples of divide-and-conquer algorithms?|a. Merge Sort|b. Quick Sort|c. Binary Search|d. Breadth-First Search|a,b
159|C1|What are the advantages of using a hash table?|a. Constant-time average-case complexity for search, insert, and delete operations|b. No need for a hash function|c. Efficient memory usage|d. Ability to maintain sorted order|a,c
160|C2|Which of the following are examples of graph traversal algorithms?|a. Depth-First Search (DFS)|b. Breadth-First Search (BFS)|c. Dijkstra's Algorithm|d. Bellman-Ford Algorithm|a,b
161|C2|What are the properties of a minimum spanning tree?|a. It connects all vertices in the graph|b. It has the minimum total edge weight|c. It is always unique|d. It can contain cycles|a,b
162|C2|Which of the following are examples of greedy algorithms?|a. Dijkstra's Algorithm for shortest paths|b. Kruskal's Algorithm for minimum spanning trees|c. Huffman Coding for data compression|d. Knapsack Problem|a,c
163|C1|What are the advantages of using a heap data structure?|a. Efficient insertion and deletion of elements|b. Constant-time access to the minimum or maximum element|c. Maintaining a sorted order of elements|d. Efficient search operations|a,b
164|C2|Which of the following are examples of dynamic programming problems?|a. Fibonacci Sequence|b. Longest Common Subsequence|c. Knapsack Problem|d. Traveling Salesman Problem|b,c
165|C1|What are the advantages of using a trie data structure?|a. Efficient prefix matching|b. Efficient memory usage for storing strings with shared prefixes|c. Constant-time search complexity|d. Ability to store non-string data|a,b,c
166|C2|Which of the following are examples of backtracking algorithms?|a. N-Queens Problem|b. Sudoku Solver|c. Hamiltonian Cycle|d. Subset Sum Problem|a,d
167|C1|What are the properties of a red-black tree?|a. It is a self-balancing binary search tree|b. Each node is either red or black|c. The root node is always black|d. All leaves (NIL nodes) are black|b,c,d
168|C2|Which of the following are examples of cache optimization techniques?|a. Locality of reference|b. Data compression|c. Memoization|d. Loop unrolling|a,d
169|C1|What are the advantages of using a bloom filter?|a. Space-efficient probabilistic data structure|b. Constant-time insertion and lookup operations|c. No false negatives|d. Ability to store large amounts of data|a,b
170|C2|Which of the following are examples of string matching algorithms?|a. Brute-force algorithm|b. Knuth-Morris-Pratt (KMP) algorithm|c. Rabin-Karp algorithm|d. Finite Automata|b,c
171|C1|What are the properties of a B-tree?|a. It is a self-balancing tree|b. It maintains sorted data|c. It is optimized for disk access|d. It has a variable number of children per node|a,c,d
172|C2|Which of the following are examples of randomized algorithms?|a. Randomized Quicksort|b. Randomized Selection|c. Randomized Primality Testing|d. Randomized Hashing|b,d
173|C1|What are the advantages of using a skip list?|a. Probabilistic data structure|b. Efficient insertion, deletion, and search operations|c. Maintains a sorted order of elements|d. Provides a balance between linked lists and binary search trees|b,c
174|C2|Which of the following are examples of approximation algorithms?|a. Vertex Cover Problem|b. Set Cover Problem|c. Traveling Salesman Problem|d. Knapsack Problem|a,c
175|C1|What are the properties of a Fibonacci heap?|a. It is a mergeable heap|b. It supports efficient insertion and extraction of minimum elements|c. It has a constant amortized time for most operations|d. It is used in Dijkstra's algorithm for priority queues|a,d
176|C2|Which of the following are examples of geometric algorithms?|a. Convex Hull|b. Closest Pair of Points|c. Line Segment Intersection|d. Polygon Triangulation|b,d
177|C1|What are the advantages of using a segment tree?|a. Efficient range queries|b. Efficient updates on ranges|c. Supports lazy propagation|d. Useful for solving problems with overlapping intervals|a,c
178|C2|Which of the following are examples of graph algorithms?|a. Depth-First Search (DFS)|b. Breadth-First Search (BFS)|c. Dijkstra's Algorithm|d. Kruskal's Algorithm|c,d
179|C1|What are the properties of a suffix tree?|a. It is a compressed trie|b. It represents all suffixes of a given string|c. It allows efficient pattern matching|d. It has a linear space complexity|b,c
180|C2|Which of the following are examples of compression algorithms?|a. Huffman Coding|b. Lempel-Ziv-Welch (LZW)|c. Run-Length Encoding (RLE)|d. Burrows-Wheeler Transform (BWT)|a,c
181|C1|What are the advantages of using a disjoint set data structure?|a. Efficient union and find operations|b. Useful for detecting cycles in undirected graphs|c. Supports path compression optimization|d. Maintains connected components in a graph|a,d
182|C2|Which of the following are examples of matrix multiplication algorithms?|a. Naive algorithm|b. Strassen's algorithm|c. Coppersmith-Winograd algorithm|d. Cannon's algorithm|b,c
183|C1|What are the properties of a treap?|a. It is a randomized binary search tree|b. Each node has a randomly assigned priority|c. It maintains a heap property based on the priorities|d. It is a self-balancing tree|a,c
184|C2|Which of the following are examples of string algorithms?|a. Longest Common Substring|b. Longest Palindromic Substring|c. Z Algorithm|d. Manacher's Algorithm|b,d
185|C1|What are the advantages of using a splay tree?|a. Self-adjusting binary search tree|b. Frequently accessed elements move closer to the root|c. Amortized O(log n) time complexity for operations|d. Useful for implementing caches and garbage collection|a,c
186|C2|Which of the following are examples of graph coloring algorithms?|a. Greedy Coloring|b. Backtracking Coloring|c. Welsh-Powell Algorithm|d. Brelaz's Heuristic|b,c
187|C1|What are the properties of a KD-tree?|a. It is a space-partitioning data structure|b. It organizes points in a k-dimensional space|c. It allows efficient nearest neighbor search|d. It is a binary tree|a,d
188|C2|Which of the following are examples of network flow algorithms?|a. Ford-Fulkerson Algorithm|b. Edmonds-Karp Algorithm|c. Dinic's Algorithm|d. Push-Relabel Algorithm|a,d
189|C1|What are the advantages of using a Fenwick tree?|a. Efficient prefix sum calculations|b. Efficient updates on individual elements|c. Useful for solving problems with range queries|d. Also known as a Binary Indexed Tree (BIT)|b,c
190|C2|Which of the following are examples of scheduling algorithms?|a. First-Come, First-Served (FCFS)|b. Shortest Job First (SJF)|c. Round Robin (RR)|d. Priority Scheduling|b,d
191|C1|What are the properties of a ternary search tree?|a. It is a tree-based data structure|b. Each node has three children|c. It is used for storing and searching strings|d. It allows efficient prefix matching|a,c
192|C2|Which of the following are examples of computational geometry problems?|a. Convex Hull|b. Voronoi Diagrams|c. Delaunay Triangulation|d. Line Segment Intersection|a,d
193|C1|What are the advantages of using a radix tree?|a. Efficient prefix matching|b. Compact representation of strings|c. Useful for storing and searching IP addresses|d. Also known as a trie|b,c
194|C2|Which of the following are examples of pattern matching algorithms?|a. Naive string matching|b. Boyer-Moore Algorithm|c. Knuth-Morris-Pratt (KMP) Algorithm|d. Rabin-Karp Algorithm|c,d
195|C1|What are the properties of a binomial heap?|a. It is a collection of binomial trees|b. Each binomial tree is a min-heap|c. It supports efficient merging of two heaps|d. It allows efficient insertion and extraction of minimum elements|b,d
196|C2|Which of the following are examples of string compression algorithms?|a. Run-Length Encoding (RLE)|b. Huffman Coding|c. Lempel-Ziv-Welch (LZW)|d. Burrows-Wheeler Transform (BWT)|a,c
197|C1|What are the advantages of using a sparse table?|a. Efficient range minimum/maximum queries|b. Constant query time|c. Precomputation based on dynamic programming|d. Useful for solving problems with static arrays|a,d
198|C2|Which of the following are examples of graph connectivity problems?|a. Connected Components|b. Bridges|c. Articulation Points|d. Strongly Connected Components|b,c
199|C1|What are the properties of a suffix array?|a. It is a sorted array of all suffixes of a string|b. It allows efficient pattern matching|c. It can be constructed in linear time|d. It is closely related to the suffix tree|a,c
200|C2|Which of the following are examples of string searching algorithms?|a. Brute-force search|b. Knuth-Morris-Pratt (KMP) Algorithm|c. Boyer-Moore Algorithm|d. Finite Automata|b,d
201|C1|What are the advantages of using a binary heap?|a. Efficient insertion and deletion of elements|b. Constant-time access to the minimum or maximum element|c. Maintaining a sorted order of elements|d. Useful for implementing priority queues|a,d
202|C2|Which of the following are examples of graph cycle detection algorithms?|a. Floyd's Cycle-Finding Algorithm|b. Brent's Algorithm|c. Depth-First Search (DFS)|d. Breadth-First Search (BFS)|a,c
203|C1|What are the properties of a van Emde Boas tree?|a. It is a tree-based data structure|b. It supports efficient insertion, deletion, and search operations|c. It has a time complexity of O(log log n) for most operations|d. It is useful for solving problems with integer keys|b,c
204|C2|Which of the following are examples of string distance algorithms?|a. Levenshtein Distance|b. Hamming Distance|c. Jaro-Winkler Distance|d. Cosine Similarity|a,b
205|C1|What are the advantages of using a Cartesian tree?|a. It is a binary tree derived from a sequence of numbers|b. It allows efficient range minimum/maximum queries|c. It can be constructed in linear time|d. It is a self-balancing tree|b,c
206|C2|Which of the following are examples of graph shortest path algorithms?|a. Dijkstra's Algorithm|b. Bellman-Ford Algorithm|c. Floyd-Warshall Algorithm|d. A* Search Algorithm|a,c
207|C1|What are the properties of a Fibonacci tree?|a. It is a tree-based data structure|b. It supports efficient insertion and deletion operations|c. It has a time complexity of O(log n) for most operations|d. It is a self-balancing tree|b,d
208|C1|Which of the following are examples of geometric data structures?|a. Quad Tree|b. Oct Tree|c. R-Tree|d. Bounding Volume Hierarchy (BVH)|a,c
209|C2|What are the advantages of using a counting sort?|a. It is an integer sorting algorithm|b. It has a linear time complexity|c. It is efficient for sorting small integers with a limited range|d. It is a comparison-based sorting algorithm|b,c
210|C2|Which of the following are examples of graph minimum spanning tree algorithms?|a. Kruskal's Algorithm|b. Prim's Algorithm|c. Borůvka's Algorithm|d. Reverse-Delete Algorithm|a,b
211|C1|What are the properties of a wavelet tree?|a. It is a space-efficient data structure|b. It supports efficient range queries|c. It allows compression of data|d. It is based on the concept of wavelet transform|a,c
212|C2|Which of the following are examples of cache eviction policies?|a. Least Recently Used (LRU)|b. First-In-First-Out (FIFO)|c. Least Frequently Used (LFU)|d. Random Replacement|a,b
213|C1|What are the advantages of using a cuckoo hash table?|a. It is a hash table variant with constant-time worst-case complexity|b. It resolves collisions by using multiple hash functions|c. It allows dynamic resizing of the hash table|d. It guarantees no collisions|a,b
214|C2|Which of the following are examples of external sorting algorithms?|a. Merge Sort|b. Polyphase Merge Sort|c. Cascade Merge Sort|d. Distribution Sort|b,d
215|C1|What are the properties of a Merkle tree?|a. It is a hash-based data structure|b. It allows efficient verification of the contents of large data structures|c. It is commonly used in blockchain and peer-to-peer networks|d. It is a self-balancing tree|a,c
216|C2|Which of the following are examples of lossless compression algorithms?|a. Huffman Coding|b. Run-Length Encoding (RLE)|c. Lempel-Ziv-Welch (LZW)|d. Discrete Cosine Transform (DCT)|a,c
217|C1|What are the advantages of using a Fibonacci heap over a binary heap?|a. Faster insertion and deletion operations|b. Faster decrease-key operation|c. Faster merging of two heaps|d. Lower memory overhead|b,c
218|C2|Which of the following are examples of graph connectivity algorithms?|a. Tarjan's Algorithm|b. Kosaraju's Algorithm|c. Kruskal's Algorithm|d. Prim's Algorithm|a,b
219|C1|What are the properties of a splay tree?|a. It is a self-adjusting binary search tree|b. It brings recently accessed elements to the root|c. It has an amortized time complexity of O(log n) for most operations|d. It is a weight-balanced tree|a,c
220|C2|Which of the following are examples of lossy compression algorithms?|a. Discrete Cosine Transform (DCT)|b. Wavelet Compression|c. Fractal Compression|d. Vector Quantization|a,d
221|C1|What are the advantages of using a count-min sketch?|a. It is a probabilistic data structure for summarizing data streams|b. It allows estimation of the frequency of elements|c. It has a sublinear space complexity|d. It provides exact frequency|a,b
222|C1|Which of the following are examples of randomized data structures?|a. Skip List|b. Treap|c. Bloom Filter|d. Count-Min Sketch|a,b,c
223|C1|What are the properties of a suffix automaton?|a. It is a finite state machine|b. It recognizes all suffixes of a given string|c. It allows efficient pattern matching|d. It has a compact representation|a,b,c
224|C2|Which of the following are examples of graph centrality measures?|a. Degree Centrality|b. Betweenness Centrality|c. Closeness Centrality|d. Eigenvector Centrality|a,b,c,d
225|C1|What are the advantages of using a range tree?|a. It supports efficient range queries in multiple dimensions|b. It allows insertion and deletion of elements|c. It has a space complexity of O(n logᵏ⁻¹ n) for k dimensions|d. It is a self-balancing tree|a,c
226|C2|Which of the following are examples of parallel sorting algorithms?|a. Odd-Even Sort|b. Bitonic Sort|c. Sample Sort|d. Radix Sort|a,b,d
227|C1|What are the properties of a Fenwick tree (Binary Indexed Tree)?|a. It supports efficient prefix sum calculations|b. It allows point updates in logarithmic time|c. It has a space complexity of O(n)|d. It is a self-balancing tree|a,b,c
228|C1|Which of the following are examples of string suffix structures?|a. Suffix Tree|b. Suffix Array|c. Suffix Trie|d. Suffix Automaton|a,b,d
229|C1|What are the advantages of using a Rope data structure?|a. It allows efficient insertion, deletion, and concatenation of strings|b. It supports fast random access to characters|c. It has a time complexity of O(log n) for most operations|d. It is a space-efficient data structure|a,c
230|C1|Which of the following are examples of concurrent data structures?|a. Concurrent Hash Map|b. Concurrent Skip List|c. Concurrent Queue|d. Concurrent Binary Search Tree|a,c,d
231|C1|What are the properties of a Bloom filter?|a. It is a probabilistic data structure|b. It tests membership of elements in a set|c. It guarantees no false negatives|d. It allows deletion of elements|a,b,c
232|C2|Which of the following are examples of graph flow algorithms?|a. Ford-Fulkerson Algorithm|b. Edmonds-Karp Algorithm|c. Dinic's Algorithm|d. Push-Relabel Algorithm|a,b,d
233|C1|What are the advantages of using a Fibonacci heap over a binomial heap?|a. Faster decrease-key operation|b. Faster deletion operation|c. Support for efficient merging of two heaps|d. Lower memory overhead|a,c
234|C2|Which of the following are examples of approximation algorithms for NP-hard problems?|a. Traveling Salesman Problem|b. Set Cover Problem|c. Vertex Cover Problem|d. Knapsack Problem|b,c,d
235|C1|What are the properties of a Tango tree?|a. It is a balanced binary search tree|b. It supports efficient split and merge operations|c. It has a worst-case time complexity of O(log n) for most operations|d. It is a weight-balanced tree|a,b,c
236|C2|Which of the following are examples of graph matching algorithms?|a. Blossom Algorithm|b. Hungarian Algorithm|c. Hopcroft-Karp Algorithm|d. Kuhn-Munkres Algorithm|a,c,d
237|C1|What are the advantages of using a Ternary Search Tree (TST) over a Trie?|a. It is a space-efficient alternative to a trie|b. It supports efficient prefix matching|c. It allows storing keys with associated values|d. It has a faster lookup time compared to a trie|a,c
238|C2|Which of the following are examples of geometric hashing algorithms?|a. Point Location|b. Range Searching|c. Nearest Neighbor Search|d. Intersection Detection|b,c,d
239|C1|What are the properties of a Fusion tree?|a. It is a search tree with a branching factor of √n|b. It supports operations in O(log n / log log n) time|c. It is a cache-oblivious data structure|d. It is a self-balancing tree|a,b
240|C1|Which of the following are examples of probabilistic data structures?|a. Bloom Filter|b. Count-Min Sketch|c. HyperLogLog|d. MinHash|a,b,c,d
241|C1|What are the advantages of using a Radix tree (PATRICIA tree)?|a. It is a space-efficient alternative to a trie|b. It supports efficient prefix matching|c. It allows storing variable-length keys|d. It has a faster lookup time compared to a trie|a,c
242|C2|Which of the following are examples of string compression algorithms?|a. Burrows-Wheeler Transform (BWT)|b. Move-to-Front (MTF) Encoding|c. Run-Length Encoding (RLE)|d. Arithmetic Coding|a,b,d
243|C1|What are the properties of a Splay tree?|a. It is a self-adjusting binary search tree|b. It brings recently accessed elements closer to the root|c. It has an amortized time complexity of O(log n) for most operations|d. It is a weight-balanced tree|a,b,c
244|C2|Which of the following are examples of graph clustering algorithms?|a. k-means Clustering|b. Hierarchical Clustering|c. Spectral Clustering|d. DBSCAN (Density-Based Spatial Clustering of Applications with Noise)|a,c,d
245|C1|What are the advantages of using a Cuckoo filter over a Bloom filter?|a. It supports deletion of elements|b. It has better space efficiency|c. It provides higher accuracy in membership tests|d. It allows dynamic resizing|a,c,d
246|C2|Which of the following are examples of graph partitioning algorithms?|a. Kernighan-Lin Algorithm|b. Fiduccia-Mattheyses Algorithm|c. Spectral Partitioning|d. Multilevel Graph Partitioning|a,b,d
247|C1|What are the properties of a Treap?|a. It is a randomized binary search tree|b. Each node has a randomly assigned priority|c. It maintains the heap property based on the priorities|d. It supports efficient split and merge operations|a,b,c,d
248|C1|Which of the following are examples of geometric data structures?|a. kd-tree|b. Range tree|c. Interval tree|d. Segment tree|a,b,c,d
249|C1|What are the advantages of using a Wavelet tree?|a. It supports efficient range queries|b. It allows compression of data|c. It has a space complexity of O(n log σ), where σ is the alphabet size|d. It supports efficient rank and select operations|a,c,d
250|C2|Which of the following are examples of string matching algorithms with preprocessing?|a. Knuth-Morris-Pratt (KMP) Algorithm|b. Boyer-Moore Algorithm|c. Rabin-Karp Algorithm|d. Aho-Corasick Algorithm|a,b,d
251|C1|What are the properties of a Cartesian tree?|a. It is a binary tree derived from a sequence of numbers|b. Each node has a smaller value than its parent|c. It allows efficient range minimum/maximum queries|d. It can be constructed in linear time|a,c,d
252|C2|Which of the following are examples of graph drawing algorithms?|a. Force-Directed Algorithms|b. Layered Graph Drawing|c. Circular Graph Drawing|d. Orthogonal Graph Drawing|a,b,c,d
253|C1|What are the advantages of using a Bloom filter with counting?|a. It supports deletion of elements|b. It allows estimation of element frequencies|c. It has better space efficiency compared to a standard Bloom filter|d. It provides higher accuracy in membership tests|a,b
254|C2|Which of the following are examples of graph anonymization techniques?|a. k-anonymity|b. l-diversity|c. t-closeness|d. Differential Privacy|a,b,c,d
255|C1|What are the properties of a Fibonacci heap?|a. It is a mergeable heap|b. It supports efficient insertion and extraction of minimum elements|c. It has a constant amortized time for most operations|d. It allows decrease-key operations in O(1) amortized time|a,b,d
256|C2|Which of the following are examples of graph sparsification techniques?|a. Spectral Sparsification|b. Cut Sparsification|c. Spanners|d. Sketches|a,c,d
257|C1|What are the advantages of using a Counting Bloom filter?|a. It supports deletion of elements|b. It allows estimation of element frequencies|c. It has better lookup performance compared to a standard Bloom filter|d. It provides higher accuracy in membership tests|a,b
258|C2|Which of the following are examples of graph anonymization algorithms?|a. Degree-based Anonymization|b. Clustering-based Anonymization|c. Randomized Edge Perturbation|d. Differentially Private Graph Release|a,b,c
259|C1|What are the properties of a Compact Suffix Array?|a. It is a space-efficient representation of a suffix array|b. It supports efficient pattern matching|c. It allows compression of the suffix array|d. It has a space complexity of O(n) bits|a,c,d
260|C2|Which of the following are examples of graph mining algorithms?|a. Frequent Subgraph Mining|b. Graph Classification|c. Graph Clustering|d. Link Prediction|a,b,d
261|C1|What are the advantages of using a Quotient Filter?|a. It is a space-efficient alternative to a Bloom filter|b. It supports deletion of elements|c. It allows dynamic resizing|d. It provides higher accuracy in membership tests|a,b,c
262|C2|Which of the following are examples of graph layout algorithms?|a. Fruchterman-Reingold Algorithm|b. Kamada-Kawai Algorithm|c. Sugiyama Framework|d. Spectral Layout|a,b,d
263|C1|What are the properties of a Wavelet Matrix?|a. It is a compact data structure for representing sequences|b. It supports efficient range queries|c. It allows compression of the sequence|d. It has a space complexity of O(n log σ) bits, where σ is the alphabet size|a,b,d
264|C2|Which of the following are examples of graph kernel methods?|a. Random Walk Kernel|b. Shortest Path Kernel|c. Graphlet Kernel|d. Weisfeiler-Lehman Kernel|a,c,d
265|C1|What are the advantages of using a Succinct Suffix Array?|a. It is a space-efficient representation of a suffix array|b. It supports efficient pattern matching|c. It allows compression of the suffix array|d. It has a space complexity close to the theoretical minimum|a,b,d
266|C2|Which of the following are examples of graph neural network architectures?|a. Graph Convolutional Networks (GCNs)|b. Graph Attention Networks (GATs)|c. Graph Isomorphism Networks (GINs)|d. Spatial-Temporal Graph Neural Networks (ST-GNNs)|a,b,c
267|C1|What are the properties of a Compressed Suffix Tree?|a. It is a space-efficient representation of a suffix tree|b. It supports efficient pattern matching|c. It allows compression of the suffix tree|d. It has a space complexity of O(n) bits|a,b,c
268|C2|Which of the following are examples of graph similarity measures?|a. Graph Edit Distance|b. Maximum Common Subgraph|c. Graph Kernels|d. Graph Embeddings|a,b,c,d
269|C1|What are the advantages of using a Sketched Suffix Tree?|a. It is a space-efficient approximation of a suffix tree|b. It supports approximate pattern matching|c. It allows compression of the suffix tree|d. It has a sublinear space complexity|a,b,d
270|C2|Which of the following are examples of graph-based anomaly detection techniques?|a. Community-based Anomaly Detection|b. Subgraph-based Anomaly Detection|c. Proximity-based Anomaly Detection|d. Spectral Anomaly Detection|a,c,d
271|C1|What are the properties of a Compressed Suffix Array?|a. It is a space-efficient representation of a suffix array|b. It supports efficient pattern matching|c. It allows compression of the suffix array|d. It has a space complexity of O(n) bits|a,b,c
272|C2|Which of the following are examples of graph-based recommender systems?|a. Collaborative Filtering|b. Content-based Filtering|c. Graph-based Matrix Factorization|d. Random Walk-based Recommendation|a,c,d
273|C1|What are the advantages of using a Compressed Suffix Trie?|a. It is a space-efficient representation of a suffix trie|b. It supports efficient pattern matching|c. It allows compression of the suffix trie|d. It has a space complexity of O(n) bits|a,b,c
274|C2|Which of the following are examples of graph-based clustering algorithms?|a. Markov Clustering (MCL)|b. Affinity Propagation|c. Spectral Clustering|d. Girvan-Newman Algorithm|a,c,d
275|C1|What are the properties of a Compact Directed Acyclic Word Graph (CDAWG)?|a. It is a space-efficient representation of all substrings of a string|b. It supports efficient pattern matching|c. It allows compression of the substring index|d. It has a space complexity of O(n) bits|a,b,c
276|C2|Which of the following are examples of graph-based outlier detection methods?|a. LOF (Local Outlier Factor)|b. SCAN (Structural Clustering Algorithm for Networks)|c. ConnectOut|d. ABOD (Angle-Based Outlier Detection)|a,c,d
277|C2|What are the advantages of using a Burrows-Wheeler Transform (BWT) for string compression?|a. It allows efficient pattern matching on compressed text|b. It supports fast decompression|c. It achieves high compression ratios|d. It is used in conjunction with other compression techniques|a,c,d
278|C2|Which of the following are examples of graph-based link prediction techniques?|a. Common Neighbors|b. Jaccard Coefficient|c. Adamic-Adar Index|d. Preferential Attachment|a,b,c,d
279|C1|What are the properties of a Wavelet Suffix Tree?|a. It is a space-efficient representation of a suffix tree|b. It supports efficient pattern matching|c. It allows compression of the suffix tree|d. It has a space complexity of O(n) bits|a,b,d
280|C2|Which of the following are examples of graph-based community detection algorithms?|a. Louvain Method|b. Infomap|c. Label Propagation Algorithm|d. Stochastic Block Model|a,b,c
281|C1|What are the advantages of using a Compressed Sparse Row (CSR) format for graph representation?|a. It is space-efficient for sparse graphs|b. It allows fast row-based access|c. It supports efficient graph traversal algorithms|d. It is suitable for parallel graph processing|a,c,d
282|C2|Which of the following are examples of graph-based link analysis algorithms?|a. PageRank|b. HITS (Hyperlink-Induced Topic Search)|c. Katz Centrality|d. SimRank|a,b,d
283|C1|What are the properties of a Succinct de Bruijn Graph?|a. It is a space-efficient representation of a de Bruijn graph|b. It supports efficient traversal and querying|c. It allows compression of the graph|d. It has a space complexity of O(n) bits|a,b,d
284|C2|Which of the following are examples of graph-based influence maximization techniques?|a. Independent Cascade Model|b. Linear Threshold Model|c. Credit Distribution Model|d. Voter Model|a,b,d
285|C1|What are the advantages of using a Compressed Suffix Automaton?|a. It is a space-efficient representation of a suffix automaton|b. It supports efficient pattern matching|c. It allows compression of the suffix automaton|d. It has a space complexity of O(n) bits|a,b,c
286|C2|Which of the following are examples of graph-based recommender systems using random walks?|a. PersonalRank|b. ItemRank|c. ProbS|d. Random Walk with Restart|a,c,d
287|C1|What are the properties of a Succinct Suffix Trie?|a. It is a space-efficient representation of a suffix trie|b. It supports efficient pattern matching|c. It allows compression of the suffix trie|d. It has a space complexity of O(n) bits|a,b,c
288|C2|Which of the following are examples of graph-based link prediction methods using node embeddings?|a. DeepWalk|b. node2vec|c. LINE (Large-scale Information Network Embedding)|d. GraphSAGE|a,b,d
289|C1|What are the advantages of using a Compressed Suffix Tree with the Burrows-Wheeler Transform (BWT)?|a. It supports efficient pattern matching on compressed text|b. It allows fast decompression|c. It achieves high compression ratios|d. It has a space complexity of O(n) bits|a,c,d
290|C2|Which of the following are examples of graph-based anomaly detection using subgraph patterns?|a. CODA (Community Outlier Detection Algorithm)|b. Subgraph Outlier Detection|c. Frequent Subgraph-based Outlier Detection|d. Eigenvector-based Anomaly Detection|b,c,d
291|C1|What are the properties of a Sparse Suffix Array?|a. It is a space-efficient representation of a suffix array for sparse strings|b. It supports efficient pattern matching|c. It allows compression of the suffix array|d. It has a sublinear space complexity|a,b,d
292|C2|Which of the following are examples of graph-based clustering using random walks?|a. Walktrap|b. MarkovCluster (MCL)|c. OPTICS|d. DBSCAN|a,b
293|C1|What are the advantages of using a Compressed Suffix Array with the Burrows-Wheeler Transform (BWT)?|a. It supports efficient pattern matching on compressed text|b. It allows fast decompression|c. It achieves high compression ratios|d. It has a space complexity of O(n) bits|a,c,d
294|C2|Which of the following are examples of graph-based link prediction using matrix factorization?|a. SVD (Singular Value Decomposition)|b. NMF (Non-Negative Matrix Factorization)|c. SMF (Stochastic Matrix Factorization)|d. GMF (Geometric Matrix Factorization)|a,b,c
295|C1|What are the properties of a Succinct Directed Acyclic Word Graph (DAWG)?|a. It is a space-efficient representation of all substrings of a string|b. It supports efficient pattern matching|c. It allows compression of the substring index|d. It has a space complexity of O(n) bits|a,b,c
296|C2|Which of the following are examples of graph-based anomaly detection using community structures?|a. CODA (Community Outlier Detection Algorithm)|b. AMEN (Anomaly Mining of Edge Networks)|c. SCPM (Structural Connectivity Pattern Mining)|d. CAD (Community-based Anomaly Detection)|a,c,d
297|C1|What are the advantages of using a Compressed Sparse Column (CSC) format for graph representation?|a. It is space-efficient for sparse graphs|b. It allows fast column-based access|c. It supports efficient graph traversal algorithms|d. It is suitable for parallel graph processing|a,c,d
298|C2|Which of the following are examples of graph-based link prediction using supervised learning?|a. Feature-based Classification|b. Probabilistic Soft Logic (PSL)|c. Graph Neural Networks (GNNs)|d. Factorization Machines (FMs)|a,c,d
299|C1|What are the properties of a Succinct Suffix Automaton?|a. It is a space-efficient representation of a suffix automaton|b. It supports efficient pattern matching|c. It allows compression of the suffix automaton|d. It has a space complexity of O(n) bits|a,b,c
300|C2|Which of the following are examples of graph-based recommender systems using graph neural networks?|a. Graph Convolutional Matrix Completion (GCMC)|b. Neural Graph Collaborative Filtering (NGCF)|c. LightGCN|d. PinSage|a,b,c,d